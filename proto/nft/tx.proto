syntax = "proto3";
package plugchain.nft;

import "gogoproto/gogo.proto";

option go_package = "github.com/oracleNetworkProtocol/plugchain-sdk-go/modules/nft";

message MsgIssueClass {
    option (gogoproto.equal) = true;
    string id = 1 [ (gogoproto.customname) = "ID" ];
    string name = 2;
    string schema = 3;
    string owner  = 4;
    string symbol =5;
    bool mint_restricted =6;
    bool edit_restricted = 7;
}

message MsgIssueClassResponse{}

message MsgIssueNFT {
    option (gogoproto.equal) = true;

    string id = 1 [ (gogoproto.customname) = "ID" ];
    string class_id = 2 [ (gogoproto.customname) = "ClassID" ];
    string name = 3;
    string uri = 4 [ (gogoproto.customname) = "URI" ];;
    string data = 5;
    string owner = 6;
    string recipient = 7;
}

message MsgIssueNFTResponse{}


message MsgEditNFT {
    option (gogoproto.equal) = true;

    string id =1 [ (gogoproto.customname) = "ID" ];
    string class_id = 2 [ (gogoproto.customname) = "ClassID" ];
    string name = 3;
    string uri = 4 [ (gogoproto.customname) = "URI" ];
    string data = 5;
    string owner = 6;
}
message MsgEditNFTResponse{}

message MsgBurnNFT{
    option (gogoproto.equal) = true;

    string id  = 1 [ (gogoproto.customname) = "ID" ];
    string class_id = 2 [ (gogoproto.customname) = "ClassID" ];
    string owner = 3;
}

message MsgBurnNFTResponse{}

message MsgTransferNFT {
    option (gogoproto.equal) = true;
    string id = 1 [ (gogoproto.customname) = "ID" ];
    string class_id = 2 [ (gogoproto.customname) = "ClassID" ];
    string recipient = 3;
    string owner = 4;

}

message MsgTransferNFTResponse{}

message MsgTransferClass {
    option (gogoproto.equal) = true;
    string id = 1 [ (gogoproto.customname) = "ID" ];
    string owner = 2;
    string recipient = 3;
}

message MsgTransferClassResponse{}